on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    env: 
      # set apppool and site name from IIS
      AppPoolName : PruebaPL
      SiteName  : 'PruebaPL'
      SitePublishName  :  'PruebaPL'
      # set to site files.  In this case, the part of the path after f:/websites/
      SitePath :  C:\PruebaPL

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: dotnet build --configuration Release .

      - name: dotnet publish 
        run: | 
          dotnet publish -c Release -o ${{env.SitePublishName}}Publish .
    
      - name: Sleep for 5 seconds
        run: Start-Sleep -s 5 

      - name: Copiar página de mantenimiento
        run: Copy-Item 'C:\actions-runner\_work\Offline\App_offline.htm' 'C:\PruebaPL' -Force

      - name: Copy Files
        run: |
          $currentRetry = 1;
          $backupRetry = 1;
          $success = $false;
          $backupSuccess = $false;
          do{
            echo "Attempting file copy $currentRetry"  
            try {
              iisreset /stop  # Para el servidor de IIS
              Copy-Item ".\${env:SitePublishName}Publish\*" 'C:\PruebaPL' -Recurse -Force
              iisreset /start # Inicia el servidor de IIS
              $success = $true
            }
            catch {
              echo "Copy Failed due to following Catch error:`n"
              echo $PSItem.Exception.Message
              echo "`n"
              Start-Sleep -s 2
              $currentRetry = $currentRetry + 1;
            }
            finally {
              if ($currentRetry -ge 10) {
                  echo "Copy keeps failing; restarting AppPool/Site as last resort`n"
                  echo "Attempting to restart AppPool`n"
                  do{
                      $status = Get-WebAppPoolState -name '${{env.AppPoolName}}'
                      if ($status.Value -eq "Stopped") {
                          start-WebAppPool ${{env.AppPoolName}}
                          echo "AppPool restarted`n---------`n"
                          $backupSuccess = $true;
                      }
                      else {
                          if ($backupRetry -ge 10) {
                             throw "AppPool restart keeps failing. Please look into Malfurion"
                          }
                          echo "AppPool not stopped yet; Re-attempt #$backupRetry"
                          Start-Sleep -s 3
                          $backupRetry = $backupRetry + 1;
                      }
                  }
                  while (!$backupSuccess -and $backupRetry -le 10)
                  $backupRetry = 1;
                  $backupSuccess = $false;
                  echo "Attempting to restart Website`n"
                  do{
                      $status = Get-WebsiteState -name '${{env.SiteName}}'
                      if ($status.Value -eq "Stopped") {
                          start-iissite ${{env.SiteName}}
                          echo "Website restarted`n---------`n"
                          $backupSuccess = $true;
                      }
                      else {
                          if ($backupRetry -ge 10) {
                             throw "Website restart keeps failing. Please look into Server"
                          }
                          echo "Website not stopped yet; Re-attempt #$backupRetry"
                          Start-Sleep -s 3
                          $backupRetry = $backupRetry + 1;
                      }
                  }
                  while (!$backupSuccess -and $backupRetry -le 10)
              }
            }
          }
          while (!$success -and $currentRetry -le 10)


      - name: Eliminar página de mantenimiento
        run: Remove-Item 'C:\PruebaPL\App_offline.htm'


