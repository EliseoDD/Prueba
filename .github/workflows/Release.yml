on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    env: 
      # set apppool and site name from IIS
      AppPoolName : PruebaPL
      SiteName  : 'PruebaPL'
      SitePublishName  :  'PruebaPL'
      # set to site files.  In this case, the part of the path after f:/websites/
      SitePath :  C:\PruebaPL

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: dotnet build --configuration Release .

      - name: dotnet publish 
        run: | 
          dotnet publish -c Release -o ${{env.SitePublishName}}Publish .
    
      - name: Sleep for 5 seconds
        run: Start-Sleep -s 5 


      - name: Deploy to IIS
        run: |
          if ((Get-WebSiteState -Name AspNetCoreAPI).Value -eq "Started")
          {
              Stop-SiteName -Name AspNetCoreAPI
              echo "Stopped Website AspNetCoreAPI"
          }
          if ((Get-WebAppPoolState -Name AspNetCoreAPI).Value -eq "Started")
          {
              Stop-AppPoolName -Name AspNetCoreAPI
              echo "Stopped Application Pool AspNetCoreAPI"
          }
          
          Start-Sleep -s 15        
          Copy-Item ./${{env.SitePublishName}}Publish/* 'C:\PruebaPL' -Recurse -Force 
          $success = $true;
          
          if ((Get-WebSiteState -Name AspNetCoreAPI).Value -eq "Stopped")
          {
              Start-SiteName -Name AspNetCoreAPI
              echo "Started Website AspNetCoreAPI"
          }
          if ((Get-WebAppPoolState -Name AspNetCoreAPI).Value -eq "Stopped")
          {
              Start-AppPoolName -Name AspNetCoreAPI
              echo "Started Application Pool AspNetCoreAPI"
          }
          
          if ($lastexitcode -lt 8) { $global:lastexitcode = 0 }
